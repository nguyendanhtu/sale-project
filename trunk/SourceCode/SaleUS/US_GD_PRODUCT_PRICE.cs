///************************************************
/// Generated by: Hungtd
/// Date: 24/08/2011 03:06:56
/// Goal: Create User Service Class for GD_PRODUCT_PRICE
///************************************************
/// <summary>
/// Create User Service Class for GD_PRODUCT_PRICE
/// </summary>


using SaleDS;
using IP.Core.IPCommon;
using IP.Core.IPUserService;
using System.Data.SqlClient;
using System.Data;
using System;


namespace SaleUS
{
public class US_GD_PRODUCT_PRICE : US_Object
{
	private const string c_TableName = "GD_PRODUCT_PRICE";
#region Public Properties
	public decimal dcID 
	{
		get
		{
			return CNull.RowNVLDecimal(pm_objDR, "ID", IPConstants.c_DefaultDecimal);
		}
		set	
		{
			pm_objDR["ID"] = value;
		}
	}

	public bool IsIDNull()	{
		return pm_objDR.IsNull("ID");
	}

	public void SetIDNull() {
		pm_objDR["ID"] = System.Convert.DBNull;
	}

	public decimal dcPRODUCT_ID 
	{
		get
		{
			return CNull.RowNVLDecimal(pm_objDR, "PRODUCT_ID", IPConstants.c_DefaultDecimal);
		}
		set	
		{
			pm_objDR["PRODUCT_ID"] = value;
		}
	}

	public bool IsPRODUCT_IDNull()	{
		return pm_objDR.IsNull("PRODUCT_ID");
	}

	public void SetPRODUCT_IDNull() {
		pm_objDR["PRODUCT_ID"] = System.Convert.DBNull;
	}

	public DateTime datAPPLY_DATE
	{
		get   
		{
			return CNull.RowNVLDate(pm_objDR, "APPLY_DATE", IPConstants.c_DefaultDate);
		}
		set   
		{
			pm_objDR["APPLY_DATE"] = value;
		}
	}

	public bool IsAPPLY_DATENull()
	{
		return pm_objDR.IsNull("APPLY_DATE");
	}

	public void SetAPPLY_DATENull()
	{
		pm_objDR["APPLY_DATE"] = System.Convert.DBNull;
	}

	public decimal dcPRICE 
	{
		get
		{
			return CNull.RowNVLDecimal(pm_objDR, "PRICE", IPConstants.c_DefaultDecimal);
		}
		set	
		{
			pm_objDR["PRICE"] = value;
		}
	}

	public bool IsPRICENull()	{
		return pm_objDR.IsNull("PRICE");
	}

	public void SetPRICENull() {
		pm_objDR["PRICE"] = System.Convert.DBNull;
	}

	public decimal dcUNIT_ID 
	{
		get
		{
			return CNull.RowNVLDecimal(pm_objDR, "UNIT_ID", IPConstants.c_DefaultDecimal);
		}
		set	
		{
			pm_objDR["UNIT_ID"] = value;
		}
	}

	public bool IsUNIT_IDNull()	{
		return pm_objDR.IsNull("UNIT_ID");
	}

	public void SetUNIT_IDNull() {
		pm_objDR["UNIT_ID"] = System.Convert.DBNull;
	}

#endregion


#region Init Functions
	public US_GD_PRODUCT_PRICE() 
	{
		pm_objDS = new DS_GD_PRODUCT_PRICE();
		pm_strTableName = c_TableName;
		pm_objDR = pm_objDS.Tables[pm_strTableName].NewRow();
	}

	public US_GD_PRODUCT_PRICE(DataRow i_objDR): this()
	{
		this.DataRow2Me(i_objDR);
	}

	public US_GD_PRODUCT_PRICE(decimal i_dbID) 
	{
		pm_objDS = new DS_GD_PRODUCT_PRICE();
		pm_strTableName = c_TableName;
		IMakeSelectCmd v_objMkCmd = new CMakeAndSelectCmd(pm_objDS, c_TableName);
		v_objMkCmd.AddCondition("ID", i_dbID, eKieuDuLieu.KieuNumber, eKieuSoSanh.Bang);
		SqlCommand v_cmdSQL;
		v_cmdSQL = v_objMkCmd.getSelectCmd();
		this.FillDatasetByCommand(pm_objDS, v_cmdSQL);
		pm_objDR = getRowClone(pm_objDS.Tables[pm_strTableName].Rows[0]);
	}
#endregion


  }
}
